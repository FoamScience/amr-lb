<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Homes on Load-Balanced adaptive mesh refinement</title><link>https://foamscience.github.io/amr-lb/home/</link><description>Recent content in Homes on Load-Balanced adaptive mesh refinement</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://foamscience.github.io/amr-lb/home/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://foamscience.github.io/amr-lb/home/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://foamscience.github.io/amr-lb/home/introduction/</guid><description> Msc. in Petroleum Engineering Maintainer of an OpenFOAM-based Reservoir Engineering Toolkit (OpenRSR, providing coupled solvers for Black-Oil Equations) LFCE-certified (Linux Engineer) who likes frictions with Math problems Outline Unified Dynamic Load-Balancing (DLB) Framework for rCFD Current Status: Transport equations: DLB and adaptive polyhedral mesh refinement Chemistry: DLB applied to chemical source terms (DLBFoam) Future Steps</description></item><item><title/><link>https://foamscience.github.io/amr-lb/home/amr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://foamscience.github.io/amr-lb/home/amr/</guid><description>Adaptive Mesh Refinement Why would we opt for AMR? Dynamically increase mesh resolution where needed, i.e. in moving regions of interest (locally maintain accuracy) Coarsen the mesh in smooth flow regions to save computation time but preserving local accuracy Uniformly fine meshes are usually too expensive Regions where no critical/fine flow features are developing AMR Has potential for local (computationally cheap) accuracy increase: Start solving on coarse meshes Compute discretization or residual errors Refine where errors are high Repeat steps 1-3 until errors fall under a certain tolerance Pass to the next time step GMG methods vs.</description></item><item><title/><link>https://foamscience.github.io/amr-lb/home/lb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://foamscience.github.io/amr-lb/home/lb/</guid><description>Load Balancing Load-Balance the mesh after topology changes Refinement methods generally cause imbalance for static domain decomposition cases.
The Load-Balancer engine in Foam-Extend can auto-sense processor imbalance with respect to cell-count
It also tries to migrates adjacent cells between processors if possible
dynamicFvMesh loadBalanceDynamicPolyRefinementFvMesh; loadBalanceFvMeshCoeffs { imbalanceTrigger 0.2; numberOfSubdomains 4; method hierarchical; hierarchicalCoeffs { n ( 1 2 2 ); delta 0.</description></item><item><title/><link>https://foamscience.github.io/amr-lb/home/next_steps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://foamscience.github.io/amr-lb/home/next_steps/</guid><description>Next steps Dynamic Load-Balancing of particulate flows Devise a unified framework</description></item></channel></rss>